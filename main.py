...(–≤–µ—Å—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–¥ –æ—Å—Ç–∞—ë—Ç—Å—è)

# üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–µ–º–∞
async def generate_meme(image_bytes: bytes, text: str, no_watermark: bool) -> io.BytesIO:
    image = Image.open(io.BytesIO(image_bytes)).convert("RGB")
    draw = ImageDraw.Draw(image)

    font_path = "fonts/impact.ttf"  # –£–±–µ–¥–∏—Å—å, —á—Ç–æ —à—Ä–∏—Ñ—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    font_size = int(image.height * 0.07)
    font = ImageFont.truetype(font_path, font_size)

    # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–≤–µ—Ä—Ö—É
    text_width, text_height = draw.textsize(text, font=font)
    x = (image.width - text_width) // 2
    y = 10

    draw.text((x, y), text, font=font, fill="white", stroke_width=2, stroke_fill="black")

    if not no_watermark:
        wm_text = "@t.me/OGStickBot"
        wm_font = ImageFont.truetype(font_path, int(font_size * 0.6))
        wm_width, wm_height = draw.textsize(wm_text, font=wm_font)
        draw.text((image.width - wm_width - 10, image.height - wm_height - 10), wm_text, font=wm_font, fill="white", stroke_width=1, stroke_fill="black")

    output = io.BytesIO()
    image.save(output, format="WEBP")
    output.name = "meme.webp"
    output.seek(0)
    return output

# üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
ADMIN_ID = 1049209219  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID

@dp.message_handler(commands=['admin'])
async def admin_panel(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        return

    cursor.execute("SELECT COUNT(*) FROM premium_users")
    premium_count = cursor.fetchone()[0]

    cursor.execute("SELECT COUNT(*) FROM usage_count")
    user_count = cursor.fetchone()[0]

    await message.answer(
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞</b>\n\n"
        f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—Å–µ–≥–æ: <b>{user_count}</b>\n"
        f"üíé –ü—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <b>{premium_count}</b>",
        parse_mode="HTML"
    )